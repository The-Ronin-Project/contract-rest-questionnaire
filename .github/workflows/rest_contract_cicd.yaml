name: Rest Contract CI/CD

on:
  workflow_call:
    inputs:
      schema_name:
        required: true
        type: string
      publish:
        required: false
        default: false
        type: boolean
      docker_server:
        default: "docker-repo.devops.projectronin.io"
        required: false
        type: string
    secrets:
      docker_username:
        required: false
      docker_password:
        required: false
      nexus_user:
        required: false
      nexus_token:
        required: false

jobs:
  cicd:
    name: Pull Request CI/CD flow
    runs-on: self-hosted
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2.1.0

      - name: Docker login
        run: |-
          docker login \
          -u "${{secrets.docker_username}}" \
          -p "${{secrets.docker_password}}" \
          ${{ inputs.docker_server }} \
          || docker login \
          -u "${{ secrets.NEXUS_DOCKER_USERNAME }}" \
          -p "${{ secrets.NEXUS_DOCKER_PASSWORD }}" \
          ${{ inputs.docker_server }}

      - name: Run Tests
        id: run_tests
        run: docker run -v "${PWD}:/app" docker-repo.devops.projectronin.io/ronin-contract-rest-tooling:v1 contract-tools test

      - name: Generate Docs
        id: generate_docs
        run: docker run -u root:root -v "${PWD}:/app" docker-repo.devops.projectronin.io/ronin-contract-rest-tooling:v1 contract-tools doc

      - name: Compile Schemas
        id: compile_schemas
        run: docker run -u root:root -v "${PWD}:/app" docker-repo.devops.projectronin.io/ronin-contract-rest-tooling:v1 contract-tools compile

      - name: Publish Artifact
        if: ${{ inputs.publish }}
        id: publish_artifact
        run: |-
          set -x
          
          cleanup() {
            if [[ -e /tmp/settings.xml ]]; then
              rm /tmp/settings.xml
            fi
          }
          
          trap "cleanup" EXIT
          
          echo "<settings><servers><server><id>ronin-nexus</id><username>${{ secrets.NEXUS_MAVEN_USER }}</username><password>${{ secrets.NEXUS_MAVEN_TOKEN }}</password></server></servers></settings>" > /tmp/settings.xml
          
          docker run -u root:root -v "${PWD}:/app" -v "/tmp/settings.xml:/home/ronin/.m2/settings.xml" docker-repo.devops.projectronin.io/ronin-contract-rest-tooling:v1 contract-tools publishToMaven
          find . -name 'VERSION' -exec git add "{}" \;
          git commit -m "Update versions pushed to nexus"
          git push origin $(git branch --show-current)
